{"version":3,"file":"static/js/657.a2dfa7e6.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatuswithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__+4bLE\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"avatarLarge\":\"ProfileInfo_avatarLarge__Wev6q\",\"infoBlock\":\"ProfileInfo_infoBlock__mZ2kj\"};","import React, {FC, useEffect, useState} from \"react\";\n\nexport const ProfileStatusWithHooks: FC<ProfileStatusPropsType> = (props) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const [status, setStatus] = useState<string>(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n\n        props.updateStatus(status)\n    }\n\n    const onChangeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div onDoubleClick={activateEditMode}>\n                    {props.status || 'No status'}\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true}\n                           value={status}\n                           onBlur={deactivateEditMode}\n                           onChange={onChangeStatus}\n                    />\n                </div>\n            }\n        </div>\n    );\n\n}\n\n\n//types\ntype ProfileStatusPropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}","import React from 'react';\nimport s from './ProfileInfo.module.css'\nimport {ProfileType} from \"../../../redux/ProfileReducer\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {ProfileStatusWithHooks} from \"./ProfileStatuswithHooks\";\n\ntype ProfileInfoProps = {\n    profile: ProfileType | undefined;\n    status: string\n    updateStatus: (status: string) => void\n};\n\n\nexport const ProfileInfo: React.FC<ProfileInfoProps> = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img alt={'avatar'} src={props.profile.photos.large} className={s.avatarLarge}/>\n                <div className={s.infoBlock}>\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n                    <p><b>О себе:</b> {props.profile.aboutMe}</p>\n                    <p><b>Ищу работу:</b> {props.profile.lookingForAJobDescription}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__IclvI\",\"posts\":\"MyPosts_posts__GSiZ2\",\"sendMessageForm\":\"MyPosts_sendMessageForm__+Zu+I\",\"messageArea\":\"MyPosts_messageArea__KrY9z\",\"sendMessageBtn\":\"MyPosts_sendMessageBtn__N5SFI\",\"error\":\"MyPosts_error__zuzRW\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__wW6-Y\"};","import React from 'react';\nimport s from './Post.module.css'\n\ntype PostPropsType = {\n    message: string\n    likesCount: number\n}\nexport const Post = (props: PostPropsType) => {\n    return (\n        <div className={s.post}>\n            <img\n                src=\"https://media.istockphoto.com/id/1300845620/ru/%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F/%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C-icon-flat-%D0%B8%D0%B7%D0%BE%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD-%D0%BD%D0%B0-%D0%B1%D0%B5%D0%BB%D0%BE%D0%BC-%D1%84%D0%BE%D0%BD%D0%B5-%D1%81%D0%B8%D0%BC%D0%B2%D0%BE%D0%BB-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F-%D0%B8%D0%BB%D0%BB%D1%8E%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B0.jpg?s=612x612&w=0&k=20&c=Po5TTi0yw6lM7qz6yay5vUbUBy3kAEWrpQmDaUMWnek=\"\n                alt=\"avatar\"/>\n            {props.message}\n            <div>\n                <span>Like</span> {props.likesCount}\n            </div>\n        </div>\n    );\n};\n\n","import React, {memo} from 'react';\nimport s from './MyPosts.module.css'\nimport {Post} from \"./Post/Post\";\nimport {useFormik} from \"formik\";\n\ntype PostsType = {\n    id: number\n    message: string\n    likesCount: number\n}\n\nexport type MyPostsPropsType = {\n    posts: PostsType[]\n    addPost: (post: string) => void\n}\n\nexport const MyPosts = memo((props: MyPostsPropsType) => {\n\n    const addPost = (post: string) => {\n        props.addPost(post)\n    }\n\n\n    let postsElements = props.posts.map((p) => {\n        return (\n            <Post key={p.id} message={p.message} likesCount={p.likesCount}/>\n        )\n    })\n\n    return (\n        <div className={s.myPosts}>\n            <h3>My posts</h3>\n            <div>\n                <AddPostForm addPost={addPost}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n})\n\n\nexport const AddPostForm = (props: PropsType) => {\n\n    const formik = useFormik({\n        initialValues: {\n            post: ''\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {}\n            if (!values.post) {\n                errors.post = 'Сannot be empty'\n            }\n\n            return errors\n        },\n        onSubmit: values => {\n            // dispatch(loginTC(values))\n            // alert(JSON.stringify(values));\n            props.addPost(values.post)\n            formik.resetForm()\n        },\n    })\n\n    return (\n        <>\n            <form className={s.sendMessageForm} onSubmit={formik.handleSubmit}>\n                    <textarea\n                        placeholder='Enter message'\n                        className={formik.errors.post ? s.error + ' ' + s.messageArea : s.messageArea}\n                        {...formik.getFieldProps('post')}\n                        name=\"post\"\n                        onBlur={formik.handleBlur}\n                        value={formik.values.post}\n                    ></textarea>\n                <button className={s.sendMessageBtn}\n                        disabled={!formik.isValid || formik.values.post.length < 1}>Send\n                </button>\n            </form>\n            <span style={{color: 'red'}}>{formik.errors.post}</span>\n        </>\n    )\n}\n\n\n//Types\ntype FormikErrorType = {\n    post?: string\n}\n\ntype PropsType = {\n    addPost: (post: string) => void\n}\n\n","import {addPostActionCreator} from \"../../../redux/ProfileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/reduxStore\";\nimport {Dispatch} from \"redux\";\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        posts: state.profilePage.posts\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        addPost: (post: string) => {\n            dispatch(addPostActionCreator(post))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../redux/ProfileReducer\";\n\ntype ProfileProps = {\n    profile: ProfileType | undefined;\n    status: string\n    updateStatus: (status: string) => void\n};\n\nexport const Profile = (props: ProfileProps) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    );\n};\n\n","import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserProfileTC, getUserStatusTC, ProfileType, updateUserStatusTC} from \"../../redux/ProfileReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        let userId = +this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizesUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfileTC(userId)\n        this.props.getUserStatusTC(userId)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateUserStatusTC}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizesUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfileTC, getUserStatusTC, updateUserStatusTC}), withRouter)\n(ProfileContainer)\n\n\n//Types\ntype MapStateToPropsType = {\n    profile: ProfileType | undefined\n    status: string\n    authorizesUserId: number\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    getUserProfileTC: (userId: number) => void\n    getUserStatusTC: (userId: number) => void\n    updateUserStatusTC: (status: string) => void\n}\n\ntype PathParamsType = {\n    userId: string\n}\n\ntype ProfilePropsType = MapStateToPropsType & MapDispatchPropsType\n\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","className","s","alt","src","photos","large","aboutMe","lookingForAJobDescription","Preloader","Post","message","likesCount","MyPosts","memo","postsElements","posts","map","p","id","AddPostForm","addPost","post","formik","useFormik","initialValues","validate","values","errors","onSubmit","resetForm","handleSubmit","placeholder","getFieldProps","name","handleBlur","disabled","isValid","length","style","color","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizesUserId","history","push","getUserProfileTC","getUserStatusTC","updateUserStatusTC","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}