{"version":3,"file":"static/js/237.196b759d.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","webpack://samurai-way/./src/components/common/Pagination/Pagination.module.css?82a8","components/common/Pagination/Pagination.tsx","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__33U-+\",\"user\":\"Users_user__zI1IK\",\"avatarBlock\":\"Users_avatarBlock__4Y9mT\",\"userAvatar\":\"Users_userAvatar__TjMXw\",\"textBlock\":\"Users_textBlock__hUv+h\",\"userName\":\"Users_userName__4x0p3\",\"locationBlock\":\"Users_locationBlock__U3TSh\",\"userCountry\":\"Users_userCountry__iO1X0\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Pagination_selectedPage__SaRZy\",\"pageSelector\":\"Pagination_pageSelector__kADz+\"};","import React, {useState} from 'react';\r\nimport s from \"./Pagination.module.css\";\r\n\r\n\r\nexport const Pagination = (props: PaginationPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}> prev </button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : s.pageSelector}\r\n                             onClick={(e) => props.onPageChanged(p)}>{p} </span>\r\n            })}\r\n            {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n//types\r\ntype PaginationPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    portionSize: number\r\n}\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport defaultUserPhoto from \"../../assets/images/defaultAvatar.jpeg\";\r\nimport {UsersType} from \"../../redux/UsersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const User = ({user, ...props}: UserPropsType) => {\r\n\r\n    return (\r\n        <div key={user.id} className={s.user}>\r\n            <span className={s.avatarBlock}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.userAvatar}\r\n                             src={user.photos.small != null ? user.photos.small : defaultUserPhoto}\r\n                             alt={'user photo'}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      props.unfollowTC(user.id)\r\n                                  }}>\r\n                            Unfollow\r\n                        </button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      props.followTC(user.id)\r\n                                  }}>\r\n                            Follow\r\n                        </button>}\r\n                </div>\r\n            </span>\r\n            <span className={s.textBlock}>\r\n                            <span>\r\n                                <div className={s.userName}>{user.name}</div>\r\n                                <div>{user.status}</div>\r\n                            </span>\r\n                            <span className={s.locationBlock}>\r\n                                <div className={s.userCountry}>{'user.location.country'}</div>\r\n                                <div>{'user.location.city'}</div>\r\n                            </span>\r\n                        </span>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\n//types\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    followingInProgress: Number[]\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport {UsersType} from \"../../redux/UsersReducer\";\r\nimport {Pagination} from \"../common/Pagination/Pagination\";\r\nimport {User} from \"./User\";\r\n\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    let pagesCount = props.totalUsersCount / props.pageSize\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <Pagination\r\n                currentPage={props.currentPage}\r\n                onPageChanged={props.onPageChanged}\r\n                pageSize={props.pageSize}\r\n                totalItemsCount={props.totalUsersCount}\r\n                portionSize={10}\r\n            />\r\n            {props.users.map(u => {\r\n                return (\r\n                    <User\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        followTC={props.followTC}\r\n                        unfollowTC={props.unfollowTC}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n//types\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    users: UsersType[]\r\n    onPageChanged: (p: number) => void\r\n    toggleFollowingProgress: (isFollowing: boolean, userId: number) => void\r\n    followingInProgress: Number[]\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state: AppStateType) => state.usersPage.users\r\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize\r\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount\r\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage\r\n\r\nexport const getIsLoading = (state: AppStateType) => state.usersPage.isLoading\r\nexport const getFollowingInProgress = (state: AppStateType) => state.usersPage.followingInProgress\r\n\r\nexport const getUserSuperSelector = createSelector(getUsers, (users) => {\r\n    users.filter(u => true)\r\n})\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    followTC,\r\n    requestUsersTC,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    unfollowTC,\r\n    UsersType\r\n} from \"../../redux/UsersReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsLoading,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nexport class UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersTC(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isLoading ? <Preloader/> : null}\r\n                <Users\r\n                    users={this.props.users}\r\n                    onPageChanged={this.onPageChanged}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    followTC={this.props.followTC}\r\n                    unfollowTC={this.props.unfollowTC}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsersTC: requestUsersTC,\r\n    followTC,\r\n    unfollowTC\r\n}))(UsersContainer)\r\n\r\n\r\n//types\r\ntype UsersPropsType = {\r\n    users: UsersType[]\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    setCurrentPage: (currentPage: number) => void\r\n    isLoading: boolean\r\n    toggleFollowingProgress: (isFollowing: boolean, userId: number) => void\r\n    followingInProgress: Number[]\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n}"],"names":["Pagination","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","currentPage","s","e","onPageChanged","User","user","to","id","src","photos","small","defaultUserPhoto","alt","followed","disabled","followingInProgress","some","unfollowTC","followTC","name","status","Users","totalUsersCount","users","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","isLoading","getFollowingInProgress","UsersContainer","pageNumber","getUsersTC","this","Preloader","follow","unfollow","toggleFollowingProgress","React","compose","connect","setCurrentPage","requestUsersTC"],"sourceRoot":""}